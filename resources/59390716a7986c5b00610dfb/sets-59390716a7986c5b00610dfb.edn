(({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "secondGoatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")} {:perm "choose", :params ("contestant" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")} {:perm "choose", :params ("contestant" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "secondGoatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")} {:perm "choose", :params ("contestant" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]}) ({:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "active")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "arrive", :params ("contestant")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "active")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "arrive", :params ("contestant")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "active")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "arrive", :params ("contestant")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "active")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "arrive", :params ("contestant")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "active")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "arrive", :params ("contestant")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "secondGoatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "carDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred ({:event "open", :params ("host" "secondGoatDoor"), :inst "montyHallProblem"} {:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseC")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "goatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}) ({:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "arrive", :params ("contestant"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseA")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")} {:perm "choose", :params ("contestant" "secondGoatDoor")} {:perm "choose", :params ("contestant" "goatDoor")} {:perm "choose", :params ("contestant" "carDoor")}]} {:occurred ({:event "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor"), :inst "montyHallProblem"} {:event "choose", :params ("contestant" "secondGoatDoor"), :inst "montyHallProblem"}), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]} {:occurred (), :fluents [{:fluent "role", :params ("host" "host")} {:fluent "role", :params ("contestant" "contestant")} {:fluent "phase", :params ("montyHallProblem" "phaseB")} {:fluent "object", :params ("secondGoatDoor" "secondGoatDoor")} {:fluent "object", :params ("goatDoor" "goatDoor")} {:fluent "object", :params ("carDoor" "carDoor")}], :viols (), :obls [], :observed (), :perms [{:perm "open", :params ("host" "secondGoatDoor")} {:perm "null"} {:perm "intMontyHallProblem", :params ("host" "contestant" "secondGoatDoor" "carDoor" "goatDoor")}]}))
