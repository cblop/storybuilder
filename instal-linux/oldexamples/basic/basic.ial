institution basic;

type Alpha;

exogenous event ex_red(Alpha);
inst event in_red(Alpha);
exogenous event ex_blue(Alpha);
inst event in_blue(Alpha);
exogenous event ex_green(Alpha);
inst event in_green(Alpha);

fluent in_fact(Alpha);
fluent in_fact_a(Alpha);
fluent in_fact_b(Alpha);
obligation fluent obl(ex_red(Alpha),ex_blue(Alpha),ex_green(Alpha));
obligation fluent obl(in_fact_a(Alpha),in_fact_b(Alpha),ex_green(Alpha));
noninertial fluent ni_fact(Alpha);

ni_fact(Alpha) when in_fact(Alpha);
% perm(ex_green(Alpha)) when in_fact(Alpha);

ex_red(A) generates in_red(A);
in_red(A) initiates
    in_fact(A),
    perm(in_blue(A))
,   pow(in_blue(A))
,   obl(ex_red(A),ex_blue(A),ex_green(A))
;

% in_red(A) terminates perm(in_red(A)), pow(in_red(A));

ex_blue(A) generates in_blue(A);
in_blue(A) initiates
%    in_fact(A)
   perm(in_green(A))
,   pow(in_green(A))
;

in_blue(A) terminates in_fact(A);

